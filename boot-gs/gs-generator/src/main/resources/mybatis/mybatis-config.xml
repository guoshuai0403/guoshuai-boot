<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!--<settings>-->
		<!--&lt;!&ndash; 全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存， 默认true &ndash;&gt;-->
		<!--<setting name="cacheEnabled" value="true" />-->
		<!--&lt;!&ndash; 延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 -->
			<!--特定关联关系中可通过设置fetchType属性来覆盖该项的开关状态。 -->
			<!--默认false-->
		<!--&ndash;&gt;-->
		<!--<setting name="lazyLoadingEnabled" value="false" />-->
		<!--&lt;!&ndash; 是否允许单一语句返回多结果集（需要兼容驱动, 默认true &ndash;&gt;-->
		<!--<setting name="multipleResultSetsEnabled" value="true" />-->
		<!--&lt;!&ndash; 使用列标签代替列名。不同的驱动在这方面会有不同的表现， -->
			<!--具体可参考相关驱动文档或通过测试这两种不同的模式来观察所用驱动的结果。-->
			<!--默认true-->
		 <!--&ndash;&gt;-->
		<!--<setting name="useColumnLabel" value="true" />-->
		<!--&lt;!&ndash; 允许 JDBC 支持自动生成主键，需要驱动兼容。 -->
			<!--如果设置为 true 则这个设置强制使用自动生成主键，-->
			<!--尽管一些驱动不能兼容但仍可正常工作（比如 Derby）。 -->
			<!--默认false-->
		<!--&ndash;&gt;-->
		<!--<setting name="useGeneratedKeys" value="false" />-->
		<!--&lt;!&ndash; 指定 MyBatis 应如何自动映射列到字段或属性。 -->
				<!--NONE 表示取消自动映射；-->
				<!--PARTIAL 只会自动映射没有定义嵌套结果集映射的结果集。 -->
				<!--FULL 会自动映射任意复杂的结果集（无论是否嵌套）。 -->
				<!--默认PARTIAL-->
				<!--&ndash;&gt;-->
		<!--<setting name="autoMappingBehavior" value="PARTIAL" />-->
		<!--&lt;!&ndash; 指定发现自动映射目标未知列（或者未知属性类型）的行为。-->
				<!--NONE: 不做任何反应-->
				<!--WARNING: 输出提醒日志 ('org.apache.ibatis.session.AutoMappingUnknownColumnBehavior' 的日志等级必须设置为 WARN)-->
				<!--FAILING: 映射失败 (抛出 SqlSessionException) -->
				<!--默认为NONE-->
				<!--&ndash;&gt;-->
		<!--<setting name="autoMappingUnknownColumnBehavior" value="NONE" />-->
		<!--&lt;!&ndash; 配置默认的执行器。SIMPLE 就是普通的执行器；-->
					<!--REUSE 执行器会重用预处理语句（prepared statements）； -->
					<!--BATCH 执行器将重用语句并执行批量更新。 -->
					<!--默认SIMPLE&ndash;&gt;-->
		<!--<setting name="defaultExecutorType" value="SIMPLE" />-->
		<!--&lt;!&ndash; 设置超时时间，它决定驱动等待数据库响应的秒数。默认Not Set (null) &ndash;&gt;-->
		<!--&lt;!&ndash; <setting name="defaultStatementTimeout" value="25" /> &ndash;&gt;-->
		<!--&lt;!&ndash; 为驱动的结果集获取数量（fetchSize）设置一个提示值。-->
			<!--此参数只可以在查询设置中被覆盖。 -->
			<!--默认Not Set (null)&ndash;&gt;-->
		<!--&lt;!&ndash; <setting name="defaultFetchSize" value="100" /> &ndash;&gt;-->
		<!--<setting name="safeRowBoundsEnabled" value="false" />-->
		<!--&lt;!&ndash; 允许在嵌套语句中使用分页（RowBounds）， 默认false &ndash;&gt;-->
		<!--<setting name="mapUnderscoreToCamelCase" value="false" />-->
		<!--&lt;!&ndash; MyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速重复嵌套查询。-->
		 <!--默认值为 SESSION，这种情况下会缓存一个会话中执行的所有查询。-->
		  <!--若设置值为 STATEMENT，本地会话仅用在语句执行上，对相同 SqlSession 的不同调用将不会共享数据 &ndash;&gt;-->
		<!--<setting name="localCacheScope" value="SESSION" />-->
		<!--&lt;!&ndash; 当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型。 -->
			<!--某些驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，-->
			<!--比如 NULL、VARCHAR 或 OTHER。 &ndash;&gt;-->
		<!--<setting name="jdbcTypeForNull" value="OTHER" />-->
		<!--&lt;!&ndash; 指定哪个对象的方法触发一次延迟加载。用逗号分隔的方法列表。 默认equals, clone, hashCode, toString&ndash;&gt;-->
		<!--<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" />-->
		<!--sql 语句打印 -->
		<!--<setting name="logImpl" value="STDOUT_LOGGING" />-->
	<!--</settings>-->

	<!--配置动态数据库-->
	<environments default="development">
		<environment id="development">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments>

	<mappers>
		<mapper resource="mybatis/mapper/Test.xml" />
	</mappers>
</configuration>